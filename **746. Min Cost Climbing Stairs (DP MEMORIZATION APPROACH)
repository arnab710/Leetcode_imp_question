class Solution {
    private:
    
    int solve(int n,vector<int>& cost,vector<int> &dp){
        
        if(n==0 or n==1){
            return cost[n];
        }
        if(dp[n]!=-1) return dp[n];
        
        int fstPart = solve(n-1,cost,dp);
        int sndPart = solve(n-2,cost,dp);
        
        dp[n] = min(fstPart,sndPart) + cost[n];
        return dp[n];
        
    }
    
    
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size();
        vector<int> dp(n,-1);
        
        int min_cost = min(solve(n-1,cost,dp),solve(n-2,cost,dp));
        return min_cost;
    }
};
